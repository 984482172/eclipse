部署执行环境：
]# ./Bootstrap.sh --upstream --venv --develop --verbose
]# source /home/zhenyzha/kar/workspace/bin/activate

查询将会执行的测试：
+ --dryrun \

执行测试：
nohup python ConfigTest.py --testcase=fio_perf --guestname=RHEL.8.0 --imageformat=qcow2,raw \
--nicmodel=virtio_net --driveformat=virtio_scsi,virtio_blk --image_backend=filesystem,nfs \
--platform=ppc64le \

nohup python ConfigTest.py --category=diskformat_qcow2 --guestname=RHEL.7.7 --imageformat=qcow2 \
--nicmodel=virtio_net --driveformat=virtio_scsi --image_backend=filesystem --platform=ppc64le --clone=yes --dryrun \

log查询
(workspace) [root@ibm-p8-garrison-02 test-results]# pwd
/home/zhenyzha/kar/workspace/job-results/latest/test-results(log位置)
/kar/workspace/avocado-vt/scripts/scan_results.py 检查log的脚本.

<ngu> zhenyzha "python3 -m http.server 8002" 这样也可以实时看log
<ngu> 通过在host上提供http服务的方式，8002指的是port号
<ngu> 我网页访问的时候就是10.16.200.238:8002
<ngu> host ip:port
<ngu> 另外，之后测试跑完了要导出结果需要用到kar目录地下的脚本：./import2nfs.py -d ngu/test
<ngu> -d 后面是自己起的名字，ppc的机器最后会被导出到10.0.136.47下
<ngu> 所以像上面我那样导出后再访问就是：http://10.0.136.47/ngu/test


../kar/internal_cfg/test_loops/diskformat_qcow2.cfg


<ngu> zhenyzha__ ../kar/workspace/job-results/latest/test-results
<ngu> ../kar/workspace/var/lib/avocado/data/avocado-vt/test-providers.d/downloads/io-github-autotest-qemu/qemu/tests, 这个是qemu的test case


<ngu> https://github.com/avocado-framework/avocado-vt
<ngu> https://github.com/autotest/tp-qemu/
<ngu> 登录之后可以watch一下

<ngu> https://github.com/autotest/tp-qemu/pulls
<ngu> 这个就是所有的pull request
<ngu> avocado-vt的也一样
<ngu> tp-qemu主要是咱们大组的人提交的，avocado-vt还有libvirt的

<zhenyzha> 咱们用的一般在tp-qemu中是把
<ngu> case在tp-qemu里，avocado-vt是框架层的
<ngu> 有时间可以进去看一下别人是怎么review patch的，先学习一下




./kar/internal_cfg/subtests-internal.cfg
改盘的大小还有禁止MAC
