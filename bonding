#!/bin/bash

echo $1 >> /root/Desktop/ethxlog.txt
ethtool -i $1 >> /root/Desktop/ethxlog.txt

echo $2 >> /root/Desktop/ethxlog.txt
ethtool -i $2 >> /root/Desktop/ethxlog.txt

eth0="$1"
eth1="$2"
lspci -vvv &>> /root/Desktop/ethxlog.txt 

PLATFORM=`uname -s`
case $PLATFORM in
  Linux)

    if [ -s /etc/SuSE-release ]; then

        OS="1"
    elif [ -s /etc/redhat-release ]; then

        OS="2"
    fi ;;
esac
####### Redhat #####################################
if [ "$OS" = "2" ]
then
set_rhel7_bond_config ()
{
unset OPTIND
while getopts 'b:m:i:n:g:s:t:' opt; do
    case $opt in
        b) bond_name=$OPTARG;;
        m) bond_mode=$OPTARG;;
        i) ip=$OPTARG;;
        n) mask=$OPTARG;;
        g) gateway=$OPTARG;;
        s) bond_opts=$OPTARG;;
        t) network_type=$OPTARG;;
    esac
done
bond_config_file="/etc/sysconfig/network-scripts/ifcfg-$bond_name"
echo $bond_config_file
if [ -f $bond_config_file ]; then
    echo "Backup original $bond_config_file to backup.$bond_name"
    mv $bond_config_file /etc/sysconfig/network-scripts/backup.$bond_name -f
fi

if [ "static" == $network_type ]; then 
    if [! -n "$gateway"]; then
        ip_setting="IPADDR=$ip
NETMASK=$mask
USERCTL=no"
    else
        ip_setting="IPADDR=$ip
NETMASK=$mask
GATEWAY=$gateway
USERCTL=no"
    fi
else
    ip_setting="USERCTL=no"
fi
cat << EOF > $bond_config_file
DEVICE=$bond_name
ONBOOT=yes
BOOTPROTO=$network_type
$ip_setting
BONDING_OPTS="mode=$bond_mode $bond_opts"
NM_CONTROLLED=no
EOF
}
set_rhel7_bond_config -b bond0 -m 1 -t dhcp -s "miimon=100"
set_rhel7_ethx_config()  {
    bond_name=$1
    eth_name=$2

    eth_config_file="/etc/sysconfig/network-scripts/ifcfg-$eth_name"
    if [ -f $eth_config_file ]; then
        echo "Backup original $eth_config_file to backup.$eth_name"
        mv $eth_config_file /etc/sysconfig/network-scripts/backup.$eth_name -f
    fi

    cat << EOF  > $eth_config_file
DEVICE=$eth_name
BOOTPROTO=none
ONBOOT=yes
MASTER=$bond_name
SLAVE=yes
USERCTL=no
NM_CONTROLLED=no
EOF
}

set_rhel7_ethx_config bond0 $eth0
set_rhel7_ethx_config bond0 $eth1

echo "Network service will be restarted."
service network restart
watch -n 1 cat /proc/net/bonding/bond0

else
###### Suse #############################

set_Suse_bond_config ()
{
unset OPTIND
while getopts 'b:m:i:n:g:s:t:' opt; do
    case $opt in
        b) bond_name=$OPTARG;;
        m) bond_mode=$OPTARG;;
        i) ip=$OPTARG;;
        n) mask=$OPTARG;;
        g) gateway=$OPTARG;;
        s) bond_opts=$OPTARG;;
        t) network_type=$OPTARG;;
    esac
done
bond_config_file="/etc/sysconfig/network/ifcfg-$bond_name"
echo $bond_config_file
if [ -f $bond_config_file ]; then
    echo "Backup original $bond_config_file to backup.$bond_name"
    mv $bond_config_file /etc/sysconfig/network/backup.$bond_name -f
fi

if [ "static" == $network_type ]; then 
    if [! -n "$gateway"]; then
        ip_setting="IPADDR=$ip
NETMASK=$mask
USERCTL=no"
    else
        ip_setting="IPADDR=$ip
NETMASK=$mask
GATEWAY=$gateway
USERCTL=no"
    fi
else
    ip_setting="USERCTL=no"
fi
cat << EOF > $bond_config_file
DEVICE='$bond_name'
BOOTPROTO='$network_type'
DHCLIENT_SET_DEFAULT_ROUTE='yes'
BONDING_MASTER='yes'
BONDING_MODULE_OPTS='mode=$bond_mode $bond_opts'
BONDING_SLAVE0='$eth0'
BONDING_SLAVE1='$eth1'
ETHTOOL_OPTIONS=''
IPADDR=''
MTU=''
NAME=''
NETMASK=''
NETWORK=''
REMOTE_IPADDR=''
STARTMODE='auto'
EOF
}
set_Suse_bond_config -b bond0 -m 1 -t dhcp -s "miimon=100"
set_Suse_ethx_config()  {
    bond_name=$1
    eth_name=$2

    eth_config_file="/etc/sysconfig/network/ifcfg-$eth_name"
    if [ -f $eth_config_file ]; then
        echo "Backup original $eth_config_file to backup.$eth_name"
        mv $eth_config_file /etc/sysconfig/network/backup.$eth_name -f
    fi

    cat << EOF  > $eth_config_file
BOOTPROTO='none'
BROADCAST=''
ETHTOOL_OPTIONS=''
IPADDR=''
MTU=''
NAME=''
NETMASK=''
NETWORK=''
REMOTE_IPADDR=''
STARTMODE='hotplug'
EOF
}

set_Suse_ethx_config bond0 $eth0
set_Suse_ethx_config bond0 $eth1

echo "Network service will be restarted."
service network restart
watch -n 1 cat /proc/net/bonding/bond0
fi
